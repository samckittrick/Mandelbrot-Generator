/****************************************************
//    Mandelbrot Generator
//    Scott McKittrick
//    http://www.scottmckittrick.com
//
//    Written as a JComponent for the Swing Library
//**************************************************/

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Scott McKittrick
 */
import java.awt.event.*;
import javax.swing.JOptionPane;
import java.awt.Cursor;
import java.awt.Dimension;
import java.io.*;
import java.awt.image.BufferedImage;
import javax.imageio.*;
import javax.swing.*;
import java.net.*;

public class MandelbrotTest extends javax.swing.JFrame {
    ImageSaveDialog saveDialog;
    DocumentationDialog docDialog;
    
    
    /**
     * Creates new form MandelbrotTest
     */
    public MandelbrotTest() {
        saveDialog = new ImageSaveDialog(this, true);
        docDialog = new DocumentationDialog(this, true);
        
        
        initComponents();
        mandelbrot1.setColors(colorMap1);
        mandelbrot1.updateImage();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ZoomButtonGroup = new javax.swing.ButtonGroup();
        mandelbrot1 = new Mandelbrot();
        mandelbrot1.setCursor(new Cursor(Cursor.CROSSHAIR_CURSOR));
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        iterations = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        zoomInButton = new javax.swing.JToggleButton();
        zoomOutButton = new javax.swing.JToggleButton();
        resetButton = new javax.swing.JButton();
        colorMap1 = new ColorMap();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        saveColorMapMenu = new javax.swing.JMenuItem();
        LoadColorMapMenu = new javax.swing.JMenuItem();
        exportMenuItem = new javax.swing.JMenuItem();
        QuitMenu = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        docMenu = new javax.swing.JMenuItem();
        AboutMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mandelbrot Generator");

        mandelbrot1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mandelbrot1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout mandelbrot1Layout = new javax.swing.GroupLayout(mandelbrot1);
        mandelbrot1.setLayout(mandelbrot1Layout);
        mandelbrot1Layout.setHorizontalGroup(
            mandelbrot1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        mandelbrot1Layout.setVerticalGroup(
            mandelbrot1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Mandelbrot Generator");
        jLabel1.setToolTipText("");

        jLabel2.setText("Iterations: ");
        jLabel2.setToolTipText("Maximum number of Iterations to draw the fractal.");

        iterations.setColumns(5);
        iterations.setText(Integer.toString(mandelbrot1.getIterations()));

        jButton1.setText("Redraw");
        jButton1.setToolTipText("Redraw the Fractal");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redrawButtonPressed(evt);
            }
        });

        jLabel3.setText("Color Map:");

        ZoomButtonGroup.add(zoomInButton);
        zoomInButton.setSelected(true);
        zoomInButton.setText("Zoom In");

        ZoomButtonGroup.add(zoomOutButton);
        zoomOutButton.setText("Zoom Out");

        resetButton.setText("Reset");
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(iterations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(zoomInButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(zoomOutButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(resetButton)))
                        .addContainerGap(61, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(colorMap1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(iterations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(5, 5, 5)
                .addComponent(colorMap1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(zoomInButton)
                    .addComponent(zoomOutButton)
                    .addComponent(resetButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu1.setText("File");

        saveColorMapMenu.setText("Save ColorMap");
        saveColorMapMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveColorMapMenuActionPerformed(evt);
            }
        });
        jMenu1.add(saveColorMapMenu);

        LoadColorMapMenu.setText("Load ColorMap");
        LoadColorMapMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoadColorMapMenuActionPerformed(evt);
            }
        });
        jMenu1.add(LoadColorMapMenu);

        exportMenuItem.setText("Export Image");
        exportMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(exportMenuItem);

        QuitMenu.setText("Quit");
        QuitMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuitMenuActionPerformed(evt);
            }
        });
        jMenu1.add(QuitMenu);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Help");

        docMenu.setText("Documentation");
        docMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docMenuActionPerformed(evt);
            }
        });
        jMenu2.add(docMenu);

        AboutMenu.setText("About");
        AboutMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutMenuActionPerformed(evt);
            }
        });
        jMenu2.add(AboutMenu);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mandelbrot1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(mandelbrot1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void redrawButtonPressed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redrawButtonPressed
      try
      {
         mandelbrot1.setIterations(Integer.parseInt(iterations.getText()));
         mandelbrot1.updateImage();
      }
      catch(NumberFormatException nfe)
      {
         JOptionPane.showMessageDialog(this, "Iterations must be an integer value", "Error", JOptionPane.ERROR_MESSAGE);
         iterations.setText(Integer.toString(mandelbrot1.getIterations()));
      }
    }//GEN-LAST:event_redrawButtonPressed

    private void mandelbrot1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mandelbrot1MouseClicked
        if(zoomInButton.isSelected())
        {
            mandelbrot1.zoomIn(evt.getX(), evt.getY());
        }
        else
        {
            mandelbrot1.zoomOut(evt.getX(), evt.getY());
        }
        mandelbrot1.updateImage();
        iterations.setText(Integer.toString(mandelbrot1.getIterations()));
    }//GEN-LAST:event_mandelbrot1MouseClicked

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        mandelbrot1.setDefaultZoom();
        mandelbrot1.updateImage();
    }//GEN-LAST:event_resetButtonActionPerformed
    
    private class MapFileFilter extends javax.swing.filechooser.FileFilter {
        public boolean accept(File f)
        {
            if(f.isDirectory())
                return true;

            if(f.getName().endsWith(".cmp"))
                return true;

            return false;
        }

        public String getDescription()
        {
            return "Color Map (.cmp)";
        }
    }
    
    private void saveColorMapMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveColorMapMenuActionPerformed
        FileOutputStream fos = null;
        ObjectOutputStream oos = null;
        JFileChooser jfc = new JFileChooser();
        jfc.addChoosableFileFilter(new MapFileFilter());
        int result = jfc.showSaveDialog(this);
        if(result == JFileChooser.APPROVE_OPTION)
        {
            try
            {
                fos = new FileOutputStream(jfc.getSelectedFile());
                oos = new ObjectOutputStream(fos);
                oos.writeObject(colorMap1);
                oos.close();
            }
            catch(IOException e)
            {
                JOptionPane.showMessageDialog(this, "Error saving color map", "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println(e.getMessage());
            }
        }
        
        
    }//GEN-LAST:event_saveColorMapMenuActionPerformed

    private void exportMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportMenuItemActionPerformed
        saveDialog.setVisible(true);
        if(saveDialog.getReturnStatus() == ImageSaveDialog.RET_OK)
        {
            Dimension size;
            File location;
            try
            {
                size = saveDialog.getImageSize();
                location = new File(saveDialog.getFilePath());
                BufferedImage img = mandelbrot1.renderImage(size.width, size.height);
                ImageIO.write(img, "jpg", location);
            }
            catch(NumberFormatException ne)
            {
                JOptionPane.showMessageDialog(this, "Size values must be integers.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            catch(IOException ie)
            {
                JOptionPane.showMessageDialog(this, "Error writing image.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_exportMenuItemActionPerformed

    private void QuitMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuitMenuActionPerformed
        int result = JOptionPane.showConfirmDialog(this, "Are you sure you want to quit?", "Quit?", JOptionPane.YES_NO_OPTION);
        if(result == JOptionPane.YES_OPTION)
            System.exit(0);
    }//GEN-LAST:event_QuitMenuActionPerformed

    private void AboutMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutMenuActionPerformed
        URL url = this.getClass().getResource("/icon.jpg");
        JOptionPane.showMessageDialog(this, "<html><b>Mandelbrot Generator v1.0</b><br />By: Scott McKittrick<br /><a href=\"http://www.scottmckittrick.com\">http://www.scottmckittrick.com</a></html>", "About Mandelbrot Generator", JOptionPane.INFORMATION_MESSAGE, new ImageIcon(url));
    }//GEN-LAST:event_AboutMenuActionPerformed

    private void LoadColorMapMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadColorMapMenuActionPerformed
        FileInputStream fis = null;
        ObjectInputStream ois = null;
        JFileChooser jfc = new JFileChooser();
        jfc.addChoosableFileFilter(new MapFileFilter());
        int result = jfc.showOpenDialog(this);
        if(result == JFileChooser.APPROVE_OPTION)
        {
            try
            {
                fis = new FileInputStream(jfc.getSelectedFile());
                ois = new ObjectInputStream(fis);
                ColorMap newColorMap = (ColorMap)ois.readObject();
                ois.close();
                colorMap1.importColors(newColorMap);
                mandelbrot1.updateImage();
            }
            catch(IOException e)
            {
                System.out.println("Error Loading: " + e.getMessage());
                JOptionPane.showMessageDialog(this, "Error loading color map.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            catch(ClassNotFoundException e)
            {
                System.out.println("Class not found: " + e.getMessage());
                JOptionPane.showMessageDialog(this, "Error loading color map.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_LoadColorMapMenuActionPerformed

    private void docMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docMenuActionPerformed
        docDialog.setVisible(true);
    }//GEN-LAST:event_docMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MandelbrotTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MandelbrotTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MandelbrotTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MandelbrotTest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MandelbrotTest().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AboutMenu;
    private javax.swing.JMenuItem LoadColorMapMenu;
    private javax.swing.JMenuItem QuitMenu;
    private javax.swing.ButtonGroup ZoomButtonGroup;
    private ColorMap colorMap1;
    private javax.swing.JMenuItem docMenu;
    private javax.swing.JMenuItem exportMenuItem;
    private javax.swing.JTextField iterations;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private Mandelbrot mandelbrot1;
    private javax.swing.JButton resetButton;
    private javax.swing.JMenuItem saveColorMapMenu;
    private javax.swing.JToggleButton zoomInButton;
    private javax.swing.JToggleButton zoomOutButton;
    // End of variables declaration//GEN-END:variables
}
